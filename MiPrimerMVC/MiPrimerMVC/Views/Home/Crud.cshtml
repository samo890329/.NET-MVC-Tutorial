@model Model.DB_Context.Alumno
@{
    ViewBag.Title = (Model.IdAlumno > 0 ? Model.Nombre + " " + Model.Apellido : "Nuevo registro");
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@*Mapa de Navegación*@
<ol class="breadcrumb">
    <li><a href="~/">Alumnos</a></li>
    <li class="active">@(Model.IdAlumno > 0 ? Model.Nombre + " " + Model.Apellido : "Nuevo registro")</li>
</ol>

<!-- Nav tabs -->
<ul class="nav nav-tabs" role="tablist">
    <li role="presentation" class="active"><a href="#informacion" aria-controls="informacion" role="tab" data-toggle="tab">Información</a></li>
    @if (Model.IdAlumno > 0) //Validación Adicón cursos solo en edicion
    {
        <li role="presentation"><a href="#cursos" aria-controls="cursos" role="tab" data-toggle="tab">Cursos</a></li>
    }
</ul>

<!-- Tab panes -->
<div class="tab-content">
    <div role="tabpanel" class="tab-pane active" id="informacion">
        @using (Html.BeginForm("Guardar", "Home", FormMethod.Post, new { id = "frm-alumno" }))
        {
            @Html.HiddenFor(x => x.IdAlumno)
            <div class="panel panel-default">
                <div class="panel-heading">Información personal</div>
                <div class="panel-body">
                    <div class="form-group">
                        @Html.LabelFor(x => x.Nombre)
                        @Html.TextBoxFor(x => x.Nombre, new { @class = "form-control", style = "max-width:100% !important;" })
                        @Html.ValidationMessageFor(x => x.Nombre, null, new { @class = "label label-danger" }) @*Como parametro se le pasa la clase de Bootstrap*@
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Apellido)
                        @Html.TextBoxFor(x => x.Apellido, new { @class = "form-control", style = "max-width:100% !important;" })
                        @Html.ValidationMessageFor(x => x.Apellido, null, new { @class = "label label-danger" }) @*Como parametro se le pasa la clase de Bootstrap*@
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Sexo)
                        <select name="Sexo" class="form-control" style="max-width:100% !important;">
                            <option @(Model.Sexo == 1 ? "selected" : "") value="1">Hombre</option>
                            <option @(Model.Sexo == 2 ? "selected" : "") value="2">Mujer</option>
                        </select>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.FechaNacimiento)
                        @Html.TextBoxFor(x => x.FechaNacimiento, new { @class = "form-control", style = "max-width:100% !important;" })
                    </div>
                </div>
            </div>

            <div class="text-right">
                @*Evento boton por ASP MVC --> Posiblemente haya error en el submit al enviar por el formato de la fecha "1989/03/29" probar con ese formato*@
                @*<button data-ajax="true" data-confirm="¿Esta seguro de guardar este registro?" type="submit" class="btn btn-primary">Guardar</button>*@
                @*Evento botn por AJAX*@
                <button type="button"
                        class="btn btn-success"
                        id="saveRoute"
                        data-confirm="Esta seguro de guardar el registro"
                        onclick="javascript: SaveAlumno()">
                    Guardar
                </button>
            </div>
        }
    </div>
    @if (Model.IdAlumno > 0) //Validación Adicón cursos solo en edicion
    {
        <div role="tabpanel" class="tab-pane" id="cursos">

        </div>
    }
</div>

    

<script>
    /*
    $(document).ready(function () {
        $("#frm-alumno").submit(function () {
            var form = $(this);

            $.ajax({
                dataType: 'JSON',
                type: 'POST',
                url: form.attr('action'),
                data: form.serialize(),
                success: function (r) {
                    if (r.response) {
                        window.location.href = r.href, true;
                    } else {
                        sweetAlert("¡Error!", r.message, "error");
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log(textStatus + ' ' + errorThrown);
                }
            });

            return false;

        })
    });*/


    var SaveAlumno = function()
    {
        //Selector con el contenido del formulario
        var $form = $("#frm-alumno");

        //Llamada Ajax
        ajaxRequest(GetLoading('¡Procesando!'),
            $form.attr('action'),
            ".bt-content", "POST", "json", $form.serialize(), successSaveAlumno, errorMessageSaveAlumno, false);
    }


    function successSaveAlumno(data) {
        //Validar no sirven las alertas
        //swal("¡Registro guardado!", "El alumno de ha almacenado correctamente", "success"),
        //function (isConfirm) {
        //    if (isConfirm) {
        //        swal(
        //            'Deleted!',
        //            'Your file has been deleted.',
        //            'success')
        //    }  
        //};
        window.location.href = data.href, true;
    }

    function errorMessageSaveAlumno() {
        swal("¡Error!", "No fue posible almacenar el alumno", "error");
    }

</script>




